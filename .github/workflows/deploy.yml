name: Deploy rezeptbuch.tobias-hopp.de

on:
  push:
    branches: ["production"]
  workflow_dispatch:

concurrency:
  group: deploy-rezeptbuch-production
  cancel-in-progress: true

permissions:
  contents: read

env:
  PHP_VERSION: "8.3"
  NODE_VERSION: "20"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: npm

      - name: Install Node dependencies
        run: npm ci

      - name: Build frontend (TypeScript + Vite)
        run: npm run build

      - name: Setup PHP & Composer (for CLI availability)
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ env.PHP_VERSION }}
          tools: composer
          extensions: mbstring, intl, bcmath, curl, gd, pdo_mysql

      - name: Validate required secrets
        shell: bash
        run: |
          set -e
          missing=0
          [ -z "${{ secrets.DEPLOY_HOST }}" ] && echo "::error title=Missing secret::DEPLOY_HOST is not set" && missing=1
          [ -z "${{ secrets.DEPLOY_USER }}" ] && echo "::error title=Missing secret::DEPLOY_USER is not set" && missing=1
          [ -z "${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}" ] && echo "::error title=Missing secret::DEPLOY_SSH_PRIVATE_KEY is not set" && missing=1
          [ -z "${{ secrets.DEPLOY_PORT }}" ] && echo "::error title=Missing secret::DEPLOY_PORT is not set" && missing=1
          [ -z "${{ secrets.DEPLOY_PATH }}" ] && echo "::error title=Missing secret::DEPLOY_PATH is not set" && missing=1
          [ -z "${{ secrets.SSH_HOST_FINGERPRINT }}" ] && echo "::notice title=Host key checking::SSH_HOST_FINGERPRINT not set; host key will not be verified"
          if [ "$missing" -eq 1 ]; then
            exit 1
          fi

      - name: Prepare SSH key
        shell: bash
        run: |
          set -e
          install -m 700 -d ~/.ssh
          # Write key with LF newlines and correct perms
          printf "%s" "${{ secrets.DEPLOY_SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key

      - name: Ensure remote directory exists
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key_path: ~/.ssh/deploy_key
          passphrase: ${{ secrets.DEPLOY_SSH_PASSPHRASE }}
          port: ${{ secrets.DEPLOY_PORT }}
          fingerprint: ${{ secrets.SSH_HOST_FINGERPRINT }}
          script: |
            mkdir -p "${{ secrets.DEPLOY_PATH }}"

      - name: Upload project via SCP (exclude heavy/unsafe paths)
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key_path: ~/.ssh/deploy_key
          passphrase: ${{ secrets.DEPLOY_SSH_PASSPHRASE }}
          port: ${{ secrets.DEPLOY_PORT }}
          fingerprint: ${{ secrets.SSH_HOST_FINGERPRINT }}
          source: .
          target: ${{ secrets.DEPLOY_PATH }}
          overwrite: true
          strip_components: 0
          rm: false
          exclude: |
            .git*
            node_modules/**
            vendor/**
            tests/**
            storage/**
            .env
            .editorconfig
            .prettier*
            .eslint*
            docker/**
            .github/**

      - name: Run server-side deploy tasks (Composer + Artisan)
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.DEPLOY_HOST }}
          username: ${{ secrets.DEPLOY_USER }}
          key_path: ~/.ssh/deploy_key
          passphrase: ${{ secrets.DEPLOY_SSH_PASSPHRASE }}
          port: ${{ secrets.DEPLOY_PORT }}
          fingerprint: ${{ secrets.SSH_HOST_FINGERPRINT }}
          script: |
            set -e
            cd "${{ secrets.DEPLOY_PATH }}"
            # PHP/Composer
            composer install --no-dev --prefer-dist --no-interaction --optimize-autoloader
            # Laravel app maintenance
            php artisan key:generate --force || true
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan storage:link || true
            chmod -R ug+rwx storage bootstrap/cache || true
